CREATE DATABASE LIBRARY_MANAGEMENT_SYSTEM


USE LIBRARY_MANAGEMENT_SYSTEM


CREATE TABLE LMS_MEMBER_DETAILS
(
	MEMBER_ID INT IDENTITY (100001, 1) NOT NULL,
	MEMBER_NAME VARCHAR(20) NOT NULL,
	PHONE_NUMBER BIGINT NOT NULL,
	[PASSWORD] VARCHAR(20) NOT NULL,
	MEMBER_EMAIL VARCHAR(30) NOT NULL,
	SECURITY_QUESTION VARCHAR(50) NOT NULL,
	ANSWER VARCHAR(20) NOT NULL,
	ID_PROOF_TYPE VARCHAR(20) NOT NULL,
	ID_PROOF_NUMBER VARCHAR(20) NOT NULL,
	DATE_REGISTER DATE NOT NULL,
	CONSTRAINT PK_MEMBER_ID PRIMARY KEY (MEMBER_ID)
	
)


CREATE TABLE LMS_SUPPLIER_DETAILS
(
	SUPPLIER_ID INT IDENTITY (101, 1) NOT NULL,
	SUPPLIER_NAME VARCHAR(50) NOT NULL,
	CONTACT BIGINT NOT NULL,
	EMAIL VARCHAR(30) NOT NULL
	CONSTRAINT PK_SUPPLIER_ID PRIMARY KEY (SUPPLIER_ID)	
	
)


CREATE TABLE LMS_BOOK_DETAILS
(
	BOOK_CODE VARCHAR(6) NOT NULL,
	BOOK_TITLE VARCHAR(100) NOT NULL,
	CATEGORY VARCHAR(15) NOT NULL,
	AUTHOR VARCHAR(50) NOT NULL,
	PUBLICATIONS VARCHAR(50) NOT NULL,
	BOOK_EDITION NUMERIC(2,0) NOT NULL,
	PRICE NUMERIC(6, 2) NOT NULL,
	--SUPPLIER_ID INT NOT NULL
	CONSTRAINT PK_BOOK_CODE PRIMARY KEY (BOOK_CODE),
	--CONSTRAINT FK_SUPPLIER_ID FOREIGN KEY (SUPPLIER_ID)
	--REFERENCES LMS_SUPPLIER_DETAILS(SUPPLIER_ID)
)

CREATE TABLE LMS_ALL_BOOKS
(
	BOOK_ID INT IDENTITY (1001,1) NOT NULL,
	BOOK_CODE VARCHAR(6) NOT NULL,
	BOOK_AVAILABILITY VARCHAR(1) NOT NULL,
	SUPPLIER_ID INT NOT NULL
	CONSTRAINT PK_BOOK_ID PRIMARY KEY (BOOK_ID),
	CONSTRAINT FK_BOOK_CODE FOREIGN KEY (BOOK_CODE)
	REFERENCES LMS_BOOK_DETAILS(BOOK_CODE),
	CONSTRAINT FK_SUPPLIER_ID FOREIGN KEY (SUPPLIER_ID)
	REFERENCES LMS_SUPPLIER_DETAILS(SUPPLIER_ID)
)

CREATE TABLE LMS_BOOK_ISSUE
(
	BOOK_ISSUE_NUMBER INT IDENTITY (10001, 1) NOT NULL,
	MEMBER_ID INT NOT NULL,
	BOOK_ID INT NOT NULL,
	DATE_ISSUE DATE NOT NULL,
	DATE_DUE AS DATEADD(DAY,30,DATE_ISSUE) PERSISTED,
	DATE_RETURN DATE,
	DAYS_DELAYED AS 
	(CASE WHEN DATEDIFF(DAY,DATEADD(DAY,30,DATE_ISSUE),DATE_RETURN)<1 THEN 0
	ELSE DATEDIFF(DAY,DATEADD(DAY,30,DATE_ISSUE),DATE_RETURN)END),
	FINE_AMOUNT AS
	(CASE 
	WHEN DATEDIFF(DAY,DATEADD(DAY,30,DATE_ISSUE),DATE_RETURN)<1 THEN 0
	WHEN DATEDIFF(DAY,DATEADD(DAY,30,DATE_ISSUE),DATE_RETURN)>0 AND DATEDIFF(DAY,DATEADD(DAY,30,DATE_ISSUE),DATE_RETURN)<8 
	THEN DATEDIFF(DAY,DATEADD(DAY,30,DATE_ISSUE),DATE_RETURN)*1.00
	
	WHEN DATEDIFF(DAY,DATEADD(DAY,30,DATE_ISSUE),DATE_RETURN)>7 AND DATEDIFF(DAY,DATEADD(DAY,30,DATE_ISSUE),DATE_RETURN)<15 
	THEN (DATEDIFF(DAY,DATEADD(DAY,30,DATE_ISSUE),DATE_RETURN)-7)*2.00+7.00
	
	WHEN DATEDIFF(DAY,DATEADD(DAY,30,DATE_ISSUE),DATE_RETURN)>14 AND DATEDIFF(DAY,DATEADD(DAY,30,DATE_ISSUE),DATE_RETURN)<22 
	THEN (DATEDIFF(DAY,DATEADD(DAY,30,DATE_ISSUE),DATE_RETURN)-14)*3.00+21.00
	
	WHEN DATEDIFF(DAY,DATEADD(DAY,30,DATE_ISSUE),DATE_RETURN)>21 
	THEN (DATEDIFF(DAY,DATEADD(DAY,30,DATE_ISSUE),DATE_RETURN)-21)*5.00+42.00
	END
	 )
	CONSTRAINT PK_BOOK_ISSUE_NUMBER PRIMARY KEY (BOOK_ISSUE_NUMBER),
	CONSTRAINT FK_MEMBER_ID FOREIGN KEY (MEMBER_ID)
	REFERENCES LMS_MEMBER_DETAILS(MEMBER_ID),
	CONSTRAINT FK_BOOK_ID FOREIGN KEY (BOOK_ID)
	REFERENCES LMS_ALL_BOOKS(BOOK_ID)

)


CREATE TABLE ADMIN_DETAILS
(
	ADMIN_ID INT DEFAULT 100000,
	ADMIN_PASSWORD VARCHAR(20) 
)

ALTER TABLE LMS_ALL_BOOKS
DROP CONSTRAINT FK_SUPPLIER_ID

ALTER TABLE LMS_BOOK_ISSUE
DROP CONSTRAINT FK_MEMBER_ID

ALTER TABLE LMS_BOOK_ISSUE
DROP CONSTRAINT FK_BOOK_ID

ALTER TABLE LMS_ALL_BOOKS
DROP CONSTRAINT FK_BOOK_CODE

DROP TABLE LMS_BOOK_DETAILS
DROP TABLE LMS_MEMBER_DETAILS
DROP TABLE LMS_SUPPLIER_DETAILS
DROP TABLE LMS_BOOK_ISSUE
DROP TABLE LMS_ALL_BOOKS


SELECT * FROM LMS_BOOK_DETAILS
SELECT * FROM LMS_SUPPLIER_DETAILS
SELECT * FROM LMS_MEMBER_DETAILS
SELECT * FROM LMS_BOOK_ISSUE
SELECT * FROM LMS_ALL_BOOKS

